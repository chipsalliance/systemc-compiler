//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.4.19
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: test ()
//
module test // "t"
(
);

// Variables generated for SystemC signals
logic s;

// Local parameters generated for C++ constants
localparam logic signed [31:0] intPair1_first = 1;
localparam logic signed [9:0] intPair1_second = 2;

//------------------------------------------------------------------------------
// Method process: pair_test (test_standard_collection.cpp:49:5) 

// Process-local variables
logic signed [31:0] intPair_first;
logic signed [9:0] intPair_second;
logic signed [9:0] intPairArray_second[2];
logic signed [31:0] mpa_y[2];
logic signed [31:0] ppa_a_x[2];
logic signed [31:0] ppa_b_y[2];
logic signed [31:0] intPairArray_first[2];
logic signed [31:0] mpa_x[2];

always_comb 
begin : pair_test     // test_standard_collection.cpp:49:5
    integer i;
    logic signed [9:0] l;
    logic signed [9:0] k;
    integer idx;
    integer idx1;
    integer idx2;
    i = intPair1_first + intPair1_second;
    intPair_first = 12;
    intPair_second = 13;
    intPairArray_second[1] = 1;
    l = intPairArray_second[1];
    k = intPairArray_second[l];
    mpa_y[0] = mpa_x[0];
    mpa_y[1] = mpa_x[1];
    ppa_a_x[0] = 1;
    ppa_b_y[1] = 0;
    idx = s;
    intPairArray_first[idx] = 1;
    idx1 = s;
    idx2 = s;
    mpa_x[idx1] = idx2;
    ppa_a_x[1] = 1;
    idx2 = ppa_a_x[1] + ppa_b_y[1];
end

//------------------------------------------------------------------------------
// Method process: array_test (test_standard_collection.cpp:78:5) 

// Process-local variables
logic signed [31:0] intArray[10];

always_comb 
begin : array_test     // test_standard_collection.cpp:78:5
    integer l;
    l = intArray[0];
end

endmodule



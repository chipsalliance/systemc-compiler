//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.4.39
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "a_mod"
(
    input logic clk,
    input logic signed [31:0] i1,
    output logic signed [31:0] o1,
    output logic signed [31:0] o2,
    input logic signed [31:0] iarr1[3],
    output logic signed [31:0] oarr1[3],
    input logic signed [31:0] iarr2[2][1],
    output logic signed [31:0] oarr2[3][4],
    input logic signed [31:0] ivec1[3],
    output logic signed [31:0] ovec2[3][4]
);

// Variables generated for SystemC signals
logic nrst;
logic [3:0] s;
logic signed [31:0] t1;
logic signed [31:0] t2;
logic signed [31:0] tp1;
logic signed [31:0] tp2;
logic signed [31:0] tarr1[3];
logic signed [31:0] tarr2[3][3];
logic signed [31:0] parr1[3];
logic signed [31:0] parr2[3][4];
logic signed [31:0] vec[3];
logic signed [31:0] vec2[3][4];
logic [3:0] vec3[3];

// Local parameters generated for C++ constants
localparam logic signed [31:0] f1 = 42;

//------------------------------------------------------------------------------
// Method process: remove0 (test_unused_remove_local.cpp:98:5) 

always_comb 
begin : remove0     // test_unused_remove_local.cpp:98:5
    integer x;
    logic [3:0] y;
    integer xn;
    logic [3:0] yn;
    integer i;
    integer j;
    x = 1;
    y = 0;
    y = 2;
    yn = 0;
    i = 1;
    j = i + 1;
end

//------------------------------------------------------------------------------
// Method process: remove1 (test_unused_remove_local.cpp:111:5) 

always_comb 
begin : remove1     // test_unused_remove_local.cpp:111:5
    integer x;
    logic [3:0] y;
    integer i;
    integer j;
    integer l;
    x = 1;
    y = 0;
    y = x;
    --x;
    i = 1;
    j = i + 1;
    l = j++;
end

//------------------------------------------------------------------------------
// Method process: remove1a (test_unused_remove_local.cpp:125:5) 

always_comb 
begin : remove1a     // test_unused_remove_local.cpp:125:5
    integer x;
    logic [3:0] y;
    integer i;
    integer j;
    integer l;
    x = 1;
    y = 0;
    y = x;
    i = 1;
    j = i + 1;
    l = -j;
end

//------------------------------------------------------------------------------
// Method process: remove2 (test_unused_remove_local.cpp:137:5) 

// Process-local variables
logic signed [31:0] m;
logic signed [31:0] arr[3][3];

always_comb 
begin : remove2     // test_unused_remove_local.cpp:137:5
    integer i;
    integer j;
    integer l;
    integer e1;
    integer e2;
    integer e3;
    i = 1;
    j = i + 1;
    m = j;
    arr[1][j] = m;
    t1 = arr[s][s];
    l = s;
    t2 = l * l;
    e1 = i1;
    e2 = 1;
    o1 = e2;
    e3 = i1 + 1;
    o2 = e3;
end

//------------------------------------------------------------------------------
// Method process: remove2a (test_unused_remove_local.cpp:158:5) 

// Process-local variables
logic signed [31:0] ma;
logic signed [31:0] arra[3][3];

always_comb 
begin : remove2a     // test_unused_remove_local.cpp:158:5
    integer i;
    integer j;
    i = 1;
    j = i + 1;
    ma = j;
    arra[1][j] = ma;
end

//------------------------------------------------------------------------------
// Method process: remove3 (test_unused_remove_local.cpp:168:5) 

always_comb 
begin : remove3     // test_unused_remove_local.cpp:168:5
    integer i;
    integer j;
    integer k;
    i = 1;
    j = i + 1;
    // Call f() begin
    j++;
    // Call f() end
    k = 4;    // Call of g()
end

//------------------------------------------------------------------------------
// Method process: remove4 (test_unused_remove_local.cpp:179:5) 

always_comb 
begin : remove4     // test_unused_remove_local.cpp:179:5
    integer i;
    integer j;
    logic [3:0] x;
    logic [43:0] y;
    logic signed [13:0] z;
    integer e1;
    integer e2;
    i = 1;
    j = i + 1;
    vec[1] = 1;
    x = 2;
    vec2[0][s] = -x;
    y = 44'(s);
    vec2[s][s + 1] = signed'({1'b0, 32'(y)}) - 42;
    z = 14'(s);
    vec3[s + 1] = 4'(z);
    e1 = i1;
    e2 = ivec1[e1];
    ovec2[s][1] = e2;
end

//------------------------------------------------------------------------------
// Method process: remove5 (test_unused_remove_local.cpp:202:5) 

always_comb 
begin : remove5     // test_unused_remove_local.cpp:202:5
    integer i;
    integer j;
    integer l;
    i = 1;
    j = i + 1;
    tp1 = 1 + (1 + j);
    l = s;
    tp2 = l;
end

//------------------------------------------------------------------------------
// Method process: remove6 (test_unused_remove_local.cpp:214:5) 

always_comb 
begin : remove6     // test_unused_remove_local.cpp:214:5
    integer i;
    integer j;
    integer l;
    logic [3:0] x;
    logic signed [15:0] y;
    integer e1;
    integer e2;
    i = 1;
    j = i + 1;
    tarr1[1] = j;
    l = s;
    tarr1[s] = l;
    x = 2 * s;
    tarr2[2][s] = x;
    y = s + 1;
    tarr2[s][1] = y;
    e1 = i1;
    e2 = iarr1[1] + iarr2[s][e1];
    oarr1[s + 1] = e2;
end

//------------------------------------------------------------------------------
// Method process: remove7 (test_unused_remove_local.cpp:236:5) 

always_comb 
begin : remove7     // test_unused_remove_local.cpp:236:5
    integer i;
    integer j;
    integer l;
    logic [3:0] x;
    logic signed [15:0] y;
    integer e1;
    integer e2;
    i = 1;
    j = i + 1;
    parr1[1 + s] = j;
    l = s;
    parr1[2] = l;
    x = 2 * s;
    parr2[2][s] = x;
    y = s + 1;
    parr2[s][2 * s] = y;
    e1 = i1;
    e2 = i1 + 1;
    oarr2[s][s] = e2;
end

//------------------------------------------------------------------------------
// Method process: remove8 (test_unused_remove_local.cpp:258:5) 

always_comb 
begin : remove8     // test_unused_remove_local.cpp:258:5
    integer i;
    integer j;
    i = 1;
    j = i + 1;
    for (integer k = 0; k < 10; k = k + j)
    begin
        i++;
    end
end

//------------------------------------------------------------------------------
// Clocked THREAD: remove9 (test_unused_remove_local.cpp:269:5) 

// Thread-local variables
logic signed [31:0] i0;
logic signed [31:0] i_next;
logic signed [31:0] j0;
logic signed [31:0] j_next;
logic signed [31:0] l0;
logic signed [31:0] l_next;
logic signed [31:0] k0;
logic signed [31:0] k_next;
logic remove9_PROC_STATE;
logic remove9_PROC_STATE_next;

// Next-state combinational logic
always_comb begin : remove9_comb     // test_unused_remove_local.cpp:269:5
    remove9_func;
end
function void remove9_func;
    i_next = i0;
    j_next = j0;
    k_next = k0;
    l_next = l0;
    remove9_PROC_STATE_next = remove9_PROC_STATE;
    
    case (remove9_PROC_STATE)
        0: begin
            l_next = s;
            remove9_PROC_STATE_next = 1; return;    // test_unused_remove_local.cpp:284:13;
        end
        1: begin
            `ifndef INTEL_SVA_OFF
                assert (l_next == s) else $error("Assertion failed at test_unused_remove_local.cpp:286:13");
            `endif // INTEL_SVA_OFF
            l_next = s;
            remove9_PROC_STATE_next = 1; return;    // test_unused_remove_local.cpp:284:13;
        end
    endcase
endfunction

// Synchronous register update
always_ff @(posedge clk or negedge nrst) 
begin : remove9_ff
    if ( ~nrst ) begin
        i0 <= 1;
        j0 <= s;
        k0 <= s + 1;
        remove9_PROC_STATE <= 0;    // test_unused_remove_local.cpp:276:9;

    `ifndef INTEL_SVA_OFF
        sctAssertLine275r : assert property ( |i_next && !(|j_next) |=> |s );
    `endif // INTEL_SVA_OFF
    end
    else begin
        i0 <= i_next;
        j0 <= j_next;
        l0 <= l_next;
        k0 <= k_next;
        remove9_PROC_STATE <= remove9_PROC_STATE_next;

    `ifndef INTEL_SVA_OFF
        sctAssertLine275 : assert property ( |i_next && !(|j_next) |=> |s );
        sctAssertLine278 : assert property ( k_next == 42 |-> ##[1:2] |t1 );
    `endif // INTEL_SVA_OFF
    end
end

`ifndef INTEL_SVA_OFF
sctAssertLine292 : assert property (
    @(posedge clk) t1 == f1 |-> |t2 );
`endif // INTEL_SVA_OFF

endmodule



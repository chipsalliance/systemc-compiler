//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.4.23
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
    input logic clk
);

// Variables generated for SystemC signals
logic signed [31:0] minst_s;
logic signed [31:0] marr_s[2];

// Local parameters generated for C++ constants
localparam logic minst_a = 0;
localparam logic marr_a[2] = '{ 0, 0 };

//------------------------------------------------------------------------------
// Method process: minst_local_var (test_name_conflict2.cpp:28:5) 

always_comb 
begin : minst_local_var     // test_name_conflict2.cpp:28:5
    logic a;
    integer i;
    logic [3:0] x;
    logic signed [63:0] sum;
    x = 0;
    i = minst_s;
    sum = a ? i : 32'(x);
end

//------------------------------------------------------------------------------
// Method process: minst_member_var (test_name_conflict2.cpp:43:5) 

// Process-local variables
logic signed [31:0] minst_j;
logic signed [63:0] minst_sum;

always_comb 
begin : minst_member_var     // test_name_conflict2.cpp:43:5
    minst_j = minst_s;
    minst_sum = minst_j + 1;
end

//------------------------------------------------------------------------------
// Method process: minst_both_var (test_name_conflict2.cpp:51:5) 

// Process-local variables
logic signed [31:0] minst_i;

always_comb 
begin : minst_both_var     // test_name_conflict2.cpp:51:5
    integer i;
    integer i_1;
    i = 0;
    minst_s = i + 1;
    minst_i = 1;
    minst_s = minst_i + 2;
    i_1 = 2;
    minst_s = i_1 + 3;
end

//------------------------------------------------------------------------------
// Method process: marr_local_var (test_name_conflict2.cpp:28:5) 

always_comb 
begin : marr_local_var     // test_name_conflict2.cpp:28:5
    logic a;
    integer i;
    logic [3:0] x;
    logic signed [63:0] sum;
    x = 0;
    i = marr_s[0];
    sum = a ? i : 32'(x);
end

//------------------------------------------------------------------------------
// Method process: marr_member_var (test_name_conflict2.cpp:43:5) 

// Process-local variables
logic signed [31:0] marr_j[2];
logic signed [63:0] marr_sum[2];

always_comb 
begin : marr_member_var     // test_name_conflict2.cpp:43:5
    marr_j[0] = marr_s[0];
    marr_sum[0] = marr_j[0] + 1;
end

//------------------------------------------------------------------------------
// Method process: marr_both_var (test_name_conflict2.cpp:51:5) 

// Process-local variables
logic signed [31:0] marr_i[2];

always_comb 
begin : marr_both_var     // test_name_conflict2.cpp:51:5
    integer i;
    integer i_1;
    i = 0;
    marr_s[0] = i + 1;
    marr_i[0] = 1;
    marr_s[0] = marr_i[0] + 2;
    i_1 = 2;
    marr_s[0] = i_1 + 3;
end

//------------------------------------------------------------------------------
// Method process: marr_local_var0 (test_name_conflict2.cpp:28:5) 

always_comb 
begin : marr_local_var0     // test_name_conflict2.cpp:28:5
    logic a;
    integer i;
    logic [3:0] x;
    logic signed [63:0] sum;
    x = 0;
    i = marr_s[1];
    sum = a ? i : 32'(x);
end

//------------------------------------------------------------------------------
// Method process: marr_member_var0 (test_name_conflict2.cpp:43:5) 

always_comb 
begin : marr_member_var0     // test_name_conflict2.cpp:43:5
    marr_j[1] = marr_s[1];
    marr_sum[1] = marr_j[1] + 1;
end

//------------------------------------------------------------------------------
// Method process: marr_both_var0 (test_name_conflict2.cpp:51:5) 

always_comb 
begin : marr_both_var0     // test_name_conflict2.cpp:51:5
    integer i;
    integer i_1;
    i = 0;
    marr_s[1] = i + 1;
    marr_i[1] = 1;
    marr_s[1] = marr_i[1] + 2;
    i_1 = 2;
    marr_s[1] = i_1 + 3;
end

endmodule


